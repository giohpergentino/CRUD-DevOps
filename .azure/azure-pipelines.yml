trigger:
  branches:
    include:
      - staging

pool:
  vmImage: 'ubuntu-latest'

variables:
  sshPrivateKey: $(SSH_PRIVATE_KEY)
  ec2Host: $(EC2_HOST)
  ec2User: $(EC2_USER)
  dockerHubUsername: $(DOCKER_HUB_USERNAME)
  dockerHubPassword: $(DOCKER_HUB_PASSWORD)

stages:
- stage: Deploy
  jobs:
  - job: deploy
    steps:
    - checkout: self

    - script: |
        mkdir -p ~/.ssh
        echo "$(sshPrivateKey)" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $(ec2Host) >> ~/.ssh/known_hosts
      displayName: 'Set up SSH'

    - script: |
        ssh -i ~/.ssh/id_rsa $(ec2User)@$(ec2Host) << 'EOF'
          cd /home/ubuntu/CRUD-DevOps
          git checkout staging
          git pull origin staging
        EOF
      displayName: 'Update repository'

    - script: |
        echo "$(dockerHubPassword)" | docker login -u "$(dockerHubUsername)" --password-stdin
      displayName: 'Login to Docker Hub'

    - script: |
        cd frontend
        docker build -t $(dockerHubUsername)/frontend:latest .
        docker push $(dockerHubUsername)/frontend:latest
      displayName: 'Build and Push Frontend Image'

    - script: |
        cd docker
        docker build -t $(dockerHubUsername)/mysql:latest .
        docker push $(dockerHubUsername)/mysql:latest
      displayName: 'Build and Push MySQL Image'

    - script: |
        cd api
        docker build -t $(dockerHubUsername)/api:latest .
        docker push $(dockerHubUsername)/api:latest
      displayName: 'Build and Push API Image'

    - script: |
        ssh -i ~/.ssh/id_rsa $(ec2User)@$(ec2Host) << 'EOF'
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose
          sudo usermod -aG docker ubuntu
          newgrp docker
        EOF
      displayName: 'Install Docker on EC2'

    - script: |
        ssh -i ~/.ssh/id_rsa $(ec2User)@$(ec2Host) << 'EOF'
          docker login -u "$(dockerHubUsername)" -p "$(dockerHubPassword)"

          docker network inspect net-devops >/dev/null 2>&1 || docker network create net-devops

          docker stop frontend || true
          docker stop api || true
          docker stop mysql || true

          docker rm frontend || true
          docker rm api || true
          docker rm mysql || true

          docker pull $(dockerHubUsername)/frontend:latest
          docker run -d --name frontend --network net-devops -p 3000:80 $(dockerHubUsername)/frontend:latest

          docker pull $(dockerHubUsername)/mysql:latest
          docker run -d --name mysql --network net-devops -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_DATABASE=crud_user -e MYSQL_USER=giovanna -e MYSQL_PASSWORD=admin $(dockerHubUsername)/mysql:latest

          docker pull $(dockerHubUsername)/api:latest
          docker run -d --name api --network net-devops -p 8800:8800 $(dockerHubUsername)/api:latest
        EOF
      displayName: 'Pull and Run Docker Containers on EC2'
